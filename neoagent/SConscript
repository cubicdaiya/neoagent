# -*- coding: utf-8 -*-

import build.util
from build import config

env = Environment(
    CFLAGS=config.cflags,
    CPPPATH=config.includes,
)

libs         = config.libs
use_tcmalloc = ARGUMENTS.get('tcmalloc', 'n');
conf         = Configure(env)

if use_tcmalloc == 'y' or use_tcmalloc == 'yes':
    libs.append('tcmalloc')

for lib in libs:
    if build.util.check_pkg(conf, lib):
        env.ParseConfig('pkg-config --cflags %s' % lib)
    elif lib == 'ev' and build.util.check_pkg(conf, 'libev'):
        # for compatibility of libev rhel-package
        env.ParseConfig('pkg-config --cflags libev')

prog = env.Program(
    'neoagent',
    [ Glob('*.c'), Glob('ext/*.c') ],
    LIBS=libs,
)

if 'configure' in COMMAND_LINE_TARGETS:
    if build.util.configure(conf,
                            libs,
                            config.headers,
                            config.funcs) is False:
        Exit(1)
    else:
        Exit(0)
elif 'install' in COMMAND_LINE_TARGETS:
    prefix   = ARGUMENTS.get('prefix', '/usr/local/')
    doc_dir  = '../doc/'
    misc_dir = '../misc/'
    build.util.install(env, prog, prefix, doc_dir, misc_dir)
